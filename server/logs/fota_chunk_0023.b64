m %s %s %u
 sched is null, if=%d tid=%d flags=%x %s %s %u
 desc is null %s %s %u
 %s %s %u
 rcGet11BHighestRateIdx: invalid max rate=%d rcGet11GHighestRateIdx: invalid max rate=%d rcGet11NHighestRateIdx: invalid max rate=%d %s %s %u
 dirty buf %08x: %08x, %08x: %08x
 %s %s %u
 Expected to init %d rx buffer, actual is %d Failed to init rx desc space, buffer number=%d %s %s %u
 %s %s %u
 %s %s %u
 promis buf: out of memory alloc pm_beacon_offset fail
 starting SA query procedure with STA(%02x:%02x:%02x:%02x:%02x:%02x) STA not responded to %d SA Query attempts, Reset connection sending disassoc Removing the station %02x:%02x:%02x:%02x:%02x:%02x WPA3 SAE %02x:%02x:%02x:%02x:%02x:%02x start reauthentication max connection, deauth! max connection, deauth! Total power save buffer number: %u Init max length of beacon: %d/%d AP not PMF Capable when STA requires, reject profile [ADDBA]RX DELBA, reason:%d, delete tid:%d, initiator:%d(%s) scan in process, ignore set current channel new:<%d,%d>, old:<%d,%d>, ap:<%d,%d>, sta:<%d,%d>, prof:%d, snd_ch_cfg:0x%x ap channel adjust o:%u,%u n:%u,%u Truncated 20/40 Intolerant Channel Report IE Intolerant bit is set in BSS coexist information field config nano formatting: %s config NVS flash: %s wifi certification version: v%d.%d wifi firmware version: %s flush txq %s mode switch cause sta destroyed %s mode switch cause sta destroyed %s mode switch cause ap destroyed %s mode switch cause ap destroyed %s mode switch cause sta destroyed %s mode switch cause sta destroyed %s mode switch cause sta destroyed %s mode switch cause ap destroyed %s mode switch cause sta destroyed %s mode switch cause sta destroyed %s mode switch cause ap destroyed %s mode switch cause sta destroyed %s mode switch cause sta destroyed sta has disconnected from AP %s mode switch cause sta destroyed sta has disconnected from AP %s mode switch cause sta destroyed %s mode switch cause sta destroyed %s mode switch cause sta destroyed %s mode switch cause sta destroyed %s mode switch cause sta destroyed security: %s, phy: %s, rssi: %d connected with %s, aid = %d, channel %d, %s, bssid = %02x:%02x:%02x:%02x:%02x:%02x start obss scan, interval: %d obss scan timeout: scan begin station: %02x:%02x:%02x:%02x:%02x:%02x join, AID=%d, %s, %s max connection! removing station <%02x:%02x:%02x:%02x:%02x:%02x> after unsuccessful auth/assoc, AID = %d station: %02x:%02x:%02x:%02x:%02x:%02x leave, AID = %d, reason = %d, bss_flags is %d, bss:%p ap_probe_send over, reset wifi status to disassoc bcn_timeout,ap_probe_send_start <connect>csa, newchan=%d, old=%d, csa_count:%d primary chan differ, old=%d, new=%d, start CSA timer switch to channel %d auto reconnect no %s found, reconnect after 1s tx ht2040 coex frame: hdr=%d len=%d chan_num=%d starting SA query procedure with AP(%02x:%02x:%02x:%02x:%02x:%02x) No response to %d SA Queries, reset connection sending disassoc enable tsf Association refused temporarily time %lu, comeback time %lu (TUs) <%s>sta rx csa, newchan=%d, old=%d, csa_count:%d <%s>sta rx csa, unchanged, newchan=%d, old=%d, csa_count:%d <%s>sta rx csa, unchanged, newchan=%d, old=%d, csa_count:%d <from user>sta rx csa, csa (%d->%d) in progress, ignore newchan=%d, csa_count:%d sta rx csa, newchan=%d, old=%d unexpected state: %s -> %s (%x) state: %s -> %s (0x%x) Rxd SA Query resp with matching transaction id %x Send SA Query %s with transaction id %x mode : NAN (%02x:%02x:%02x:%02x:%02x:%02x) mode : sta (%02x:%02x:%02x:%02x:%02x:%02x) + softAP (%02x:%02x:%02x:%02x:%02x:%02x) mode : softAP (%02x:%02x:%02x:%02x:%02x:%02x) mode : sta (%02x:%02x:%02x:%02x:%02x:%02x) mode : null rx 40M intolerant in chan %d rx 11g in channel %d %s does not have H2E enabled. Using WPA2-PSK to connect %s does not have H2E enabled. Using WPA2-PSK-SHA256 to connect %s does not have H2E enabled. Using SAE to connect SAE H2E is configured as mandatory but AP does not support it SAE-PK is mandatory but AP does not support it clear tx_buf (mesh)pm stop, sleep:%lld secs, total:%lld secs, current active set:%d, running:%.02f pm stop, total sleep time: %llu us / %llu us
 pm start, type: %d
 Coexist!!! Wi-Fi station would only keep waked when available
 AP's beacon interval = %u us, DTIM period = %u And use another outer/mobile-hotspot instead. Please report this bug to the manufaturer of the router/mobile-hotspot. The router/mobile-hotspot does not follow Wi-Fi protocol. There is no TIM IE in Beacon frame. And use another outer/mobile-hotspot instead. Please report this bug to the manufaturer of the router/mobile-hotspot. The router/mobile-hotspot does not follow Wi-Fi protocol. Beacon interval IE of Beacon frame is 0. dp: %u, bi: %u, li: %u, scale listen interval from %u us to %u us stop sw txq wifi driver task: %x, prio:%d, stack:%d, core=%d clear rx fragment Ignore BAR free! Init tx cache buffer num: %d Init dynamic tx buffer num: %d Init static tx buffer num: %d Init management short buffer num: %d Init dynamic rx mgmt buffer num: %d Init static rx mgmt buffer num: %d Init data frame dynamic rx buffer num: %d lmac stop hw txq discard flag int: state=%d i=%d Coexist: Wi-Fi connect fail, apply reconnect coex policy
 (%x, %x, %x, %x, %x) %u (%x, %x, %x, %x, %x) reload(%x, %x) Deinit lldesc rx mblock:%d Init dynamic rx buffer num: %d Init static rx buffer num: %d Init static rx buffer size: %d ic_disable_sniffer ic_enable_sniffer <ba-del>idx:%d, tid:%d <ba-clr>idx:%d, tid:%d, ssn:%d, winSize:%d <ba-add>idx:%d (ifx:%d, %02x:%02x:%02x:%02x:%02x:%02x), tid:%d, ssn:%d, winSize:%d m f null
 tx null, bss_conn is null tx null, bss is null m f beacon l=%d
 tx op fail conn is released m f deauth reason:%d
 m f disassoc
 m f deauth reason:%d
 m f auth
 m f assoc rsp l=%d
 m f assoc req l=%d
 m f probe req l=%d
 m f null
 ieee80211_output_do: Packets larger than static buffer size, len = %d
 buffer null
 BSS already removed, simply leave... BSS already removed, simply leave... <MESH STA>adjust channel:%d, secondary channel offset:%d(%s) softAP updated bw to 20Mhz <MESH AP>adjust channel:%d, secondary channel offset:%d(%s) IEEE80211 ELEMID VENDOR too big! IEEE80211 ELEMID VENDOR too big! IEEE80211 ELEMID RSN too big! inactive timer: now=%x last_rx_time=%x diff=%x, aid[%d]%02x:%02x:%02x:%02x:%02x:%02x leave inactive timer, bss(%p) is removed b a f
 (error)ic_tx_pkt beacon, failed The previous beacon was not Tx done bcn a f
 bcn a f
 softap interface disabled. stop beacon tx alloc eb len=%d type=%d fail
 Invalid channel flag wapi parse: WTF no func pointer defined! Pairwise cipher must be AES-CCM/GCM for PMF %d,  Disable PMF for this connection. Rejecting PMF incapable ciphers for OWE/WPA3-Personal only auth mode Unsupported Group Mgmt cipher %d invalid LLC/SNAP header, drop pkt! mem fail mem fail mcs set is empty! 40Mhz not supported, updated bw to 20Mhz discard: fragments not support, i_seq:0x%x, frag:0x%x discard, invalid tid=%d invalid tid=%d [ADDBA]RX addba response, tid:%d, txa_attempts:%d, token mismatch, expect:%d(rx:%d), status:%d%s [ADDBA]RX addba response, tid:%d, txa_attempts:%d, state wrong txa_flags:0x%x [ADDBA]RX addba response, tid:%d, ba not setup invalid tid=%d invalid free ba index=%d wifi osi_nvs_open fail ret=%d
 wifi_nvs_load: index mismatch, i=%d index=%d
 wifi_nvs_load: no mem wifi_nvs_set fail, index=%d ret=%d
 wifi_nvs_set: unknow type=%d index=%d
 wifi_nvs_set: wrong value
 wifi_nvs_set: wrong value
 wifi_nvs_set: wrong index
 wifi nvs cfg already init ioctl: failed to post WiFi task %d ioctl: failed to get wifi thread sem ioctl_process: wifi thread sem NULL, potential bug, type=%d packet allocation failed
 appie a f
 appie a f
 wifi init: invalid config init rx buffer number=%d, change to default %d
 Enable dump HE-SIGB Cannot set PMF to optional when in WIFI_AUTH_WPA3_PSK! Setting PMF to required. Cannot set PMF to required when in WIFI_AUTH_WPA_WPA2_PSK! Setting PMF to optional. Affected by the ESP-NOW encrypt num, set the max connection num to %d password convert fail
 password less than 8
 WPA3 Extended PSK authmodes are now part of WIFI_AUTH_WPA3_PSK and will be deprecated in future sta is connected, disconnect before connecting to new ap OWE is enabled, but authmo